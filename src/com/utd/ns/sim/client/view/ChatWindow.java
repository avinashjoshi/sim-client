/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.utd.ns.sim.client.view;

import com.utd.ns.sim.client.action.ChattingAction;
import com.utd.ns.sim.client.helper.Flags;
import java.net.Socket;

/**
 *
 * @author avinash
 */
public class ChatWindow extends javax.swing.JFrame {

    private Socket socket;
    private String withUser;
    private boolean chatStarted = false;

    /**
     * Creates new form ChatWindow
     */
    public ChatWindow(Socket sock, String string) {
        initComponents();
        socket = sock;
        withUser = string;
        myInitComponents();
    }

    public final void myInitComponents() {
        this.setTitle("SIM: " + Flags.sessionUserName + " chatting with " + withUser);
        userLbl.setText(Flags.sessionUserName);
        withUserLbl.setText(withUser);
        send.addActionListener(new ChattingAction(this));
        System.out.println("Finished initializing.... window.... before first click");
        send.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JTextArea();
        chatLine = new javax.swing.JTextField();
        send = new javax.swing.JButton();
        chattingWithLbl = new javax.swing.JLabel();
        withUserLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        userLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SIM: Chatting with user");

        chatArea.setColumns(20);
        chatArea.setEditable(false);
        chatArea.setLineWrap(true);
        chatArea.setRows(5);
        jScrollPane1.setViewportView(chatArea);

        chatLine.setToolTipText("Click here to start typing");
        chatLine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chatLineKeyPressed(evt);
            }
        });

        send.setText("Send");
        send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMouseClicked(evt);
            }
        });

        chattingWithLbl.setText("Chatting with:");

        withUserLbl.setText(" ");

        jLabel1.setText("Logged in as:");

        userLbl.setText(" ");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(chatLine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 346, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(send, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane1)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(userLbl)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(chattingWithLbl)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(withUserLbl)
                                .add(13, 13, 13)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(chattingWithLbl)
                    .add(jLabel1)
                    .add(userLbl)
                    .add(withUserLbl))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(chatLine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(send))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean hasChatStarted() {
        return chatStarted;
    }

    public void chatStarted() {
        chatStarted = true;
    }

    public void chatStopped() {
        chatStarted = false;
    }

    public Socket getSocket() {
        return socket;
    }

    public void sendClicked() {
        chatArea.append("Me: " + chatLine.getText().trim() + "\n");
        chatLine.setText("");
    }

    public String getChatLine() {
        return chatLine.getText().trim();
    }

    public void updateChatArea(String string) {
        chatArea.append(withUser + ": " + string + "\n");
    }

    private void sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMouseClicked
    }//GEN-LAST:event_sendMouseClicked

    private void chatLineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chatLineKeyPressed
        if (evt.getKeyCode() == 10) {
            this.send.doClick();
        }
    }//GEN-LAST:event_chatLineKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea chatArea;
    private javax.swing.JTextField chatLine;
    private javax.swing.JLabel chattingWithLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton send;
    private javax.swing.JLabel userLbl;
    private javax.swing.JLabel withUserLbl;
    // End of variables declaration//GEN-END:variables
}
