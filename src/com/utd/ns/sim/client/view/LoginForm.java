/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.utd.ns.sim.client.view;

import com.utd.ns.sim.client.action.LoginAction;
import com.utd.ns.sim.client.action.RegisterAction;
import com.utd.ns.sim.client.helper.Flags;
import com.utd.ns.sim.client.helper.Messages;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;

/**
 *
 * @author avinash
 */
public final class LoginForm extends javax.swing.JFrame {

    /**
     * Creates new form LoginForm
     */
    public LoginForm() {
        initComponents();
        myInitComponents();
        Flags flag = new Flags();
    }

    public void myInitComponents() {
        register.addActionListener(new RegisterAction(this));
        login.addActionListener(new LoginAction(this));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hostNameLbl = new javax.swing.JLabel();
        userNameLbl1 = new javax.swing.JLabel();
        passwdLbl2 = new javax.swing.JLabel();
        simTitleLbl = new javax.swing.JLabel();
        hostName = new javax.swing.JTextField();
        userName = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        register = new javax.swing.JButton();
        login = new javax.swing.JButton();
        errorMsg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIM: Login/Register");

        hostNameLbl.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 16)); // NOI18N
        hostNameLbl.setText("Host Name");

        userNameLbl1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 16)); // NOI18N
        userNameLbl1.setText("User Name");

        passwdLbl2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 16)); // NOI18N
        passwdLbl2.setText("Password");

        simTitleLbl.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        simTitleLbl.setText("Secure Instant Messenger");

        register.setText("Register");
        register.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerMouseClicked(evt);
            }
        });

        login.setText("Login");
        login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginMouseClicked(evt);
            }
        });

        errorMsg.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        errorMsg.setForeground(new java.awt.Color(255, 0, 0));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(15, 15, 15)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(errorMsg, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 309, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                    .add(98, 98, 98)
                                    .add(register)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(login, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(hostNameLbl)
                                        .add(userNameLbl1)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, passwdLbl2))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(hostName)
                                        .add(userName)
                                        .add(password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 192, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                    .add(layout.createSequentialGroup()
                        .add(53, 53, 53)
                        .add(simTitleLbl)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(simTitleLbl)
                .add(15, 15, 15)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(hostName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(hostNameLbl))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(userName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(userNameLbl1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(passwdLbl2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(register)
                    .add(login))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(errorMsg, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerMouseClicked
    }//GEN-LAST:event_registerMouseClicked

    private void loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseClicked
    }//GEN-LAST:event_loginMouseClicked

    public void connectToServer() {

        try {
            if (Flags.socketToServer != null) {
                return;
            }
            // Connect to socket
            Flags.socketToServer = new Socket(getHostName(), 31337);

            showErrorMessage("Connected to " + getHostName() + "...");
        } catch (UnknownHostException ex) {
            showErrorMessage(Messages.HOST_NOT_FOUND + getHostName());
            Flags.socketToServer = null;
        } catch (IOException ex) {
            showErrorMessage(Messages.CONNECTION_REFUSED + getHostName() + ":" + "31337");
            Flags.socketToServer = null;
        }

    }

    public boolean validateInput() {
        errorMsg.setVisible(false);
        if ("".equalsIgnoreCase(getUserName()) || "".equalsIgnoreCase(getPassword()) || "".equalsIgnoreCase(getHostName())) {
            return false;
        }
        return true;
    }

    public String getHostName() {
        return hostName.getText().trim();
    }

    public String getUserName() {
        return userName.getText().trim();
    }

    public String getPassword() {
        return new String(password.getPassword()).trim();
    }

    public void showErrorMessage(String message) {
        errorMsg.setVisible(true);
        errorMsg.setText("");
        errorMsg.setText("<html>* " + message + "</html>");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorMsg;
    private javax.swing.JTextField hostName;
    private javax.swing.JLabel hostNameLbl;
    private javax.swing.JButton login;
    private javax.swing.JLabel passwdLbl2;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton register;
    private javax.swing.JLabel simTitleLbl;
    private javax.swing.JTextField userName;
    private javax.swing.JLabel userNameLbl1;
    // End of variables declaration//GEN-END:variables
}
